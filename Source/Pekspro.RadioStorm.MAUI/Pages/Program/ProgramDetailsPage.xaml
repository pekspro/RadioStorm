<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:Pekspro.RadioStorm.UI.ViewModel.Program;assembly=Pekspro.RadioStorm.UI"
             xmlns:v="clr-namespace:Pekspro.RadioStorm.MAUI.Pages.Program"
             xmlns:u="clr-namespace:Pekspro.RadioStorm.MAUI.Pages.Episode"
             xmlns:e="clr-namespace:Pekspro.RadioStorm.UI.Model.Episode;assembly=Pekspro.RadioStorm.UI"
             xmlns:r="clr-namespace:Pekspro.RadioStorm.UI.Resources;assembly=Pekspro.RadioStorm.UI"
             xmlns:t="clr-namespace:Pekspro.RadioStorm.MAUI.TemplateSelector"
             xmlns:views="clr-namespace:Pekspro.RadioStorm.MAUI.Views"
             xmlns:controls="clr-namespace:Pekspro.RadioStorm.MAUI.Controls"
             x:Class="Pekspro.RadioStorm.MAUI.Pages.Program.ProgramDetailsPage"
             x:DataType="vm:ProgramDetailsViewModel"
             Title="{Binding Name, Mode=OneWay}"
             >
    <ContentPage.Resources>
        <ResourceDictionary>
            <DataTemplate x:DataType="e:EpisodeModel" x:Key="EpisodeTemplate">
                <SwipeView Threshold="{StaticResource DefaultSwipeThreshold}" SwipeStarted="SwipeView_SwipeStarted" SwipeEnded="SwipeView_SwipeEnded">
                    <SwipeView.LeftItems>
                        <SwipeItems Mode="Execute">
                            <!--<SwipeItem Text="{x:Static r:Strings.General_AddToPlayList}"
                                               Command="{Binding AddToPlayListCommand}"
                                               BackgroundColor="{AppThemeBinding Dark={StaticResource WarningColorDark}, Light={StaticResource WarningColorLight}}"
                                    />-->
                            <SwipeItem Text="{Binding IsListened, Converter={StaticResource BoolToToggleIsListenedConverter}}"
                                               Command="{Binding ToggleIsListenedCommand}"
                                               BackgroundColor="{StaticResource SwipeControlBackgroundGeneral}"
                                    />
                        </SwipeItems>
                    </SwipeView.LeftItems>
                    <SwipeView.RightItems>
                        <SwipeItems Mode="Execute">
                            <SwipeItem  Text="{x:Static r:Strings.General_RemoveDownload}"
                                        IsVisible="{Binding DownloadData, Converter={StaticResource NullToIsVisibleConverter}}"
                                        Command="{Binding DeleteDownloadCommand}"
                                        BackgroundColor="{StaticResource SwipeControlBackgroundRemove}" />

                            <SwipeItem  Text="{x:Static r:Strings.General_Download}"
                                        IsVisible="{Binding HasDownloadSupportAndNoDownload}"
                                        Command="{Binding DownloadCommand}"
                                        BackgroundColor="{StaticResource SwipeControlBackgroundDownload}" />
                        </SwipeItems>
                    </SwipeView.RightItems>
                    <u:EpisodeControl>
                        <u:EpisodeControl.GestureRecognizers>
                            <TapGestureRecognizer Tapped="EpisodeTapped"/>
                        </u:EpisodeControl.GestureRecognizers>
                    </u:EpisodeControl>
                </SwipeView>
            </DataTemplate>

            <DataTemplate x:DataType="e:EpisodeModel" x:Key="EpisodeTemplateWindows">
                <u:EpisodeControl>
                    <u:EpisodeControl.GestureRecognizers>
                        <TapGestureRecognizer Tapped="EpisodeTapped"/>
                    </u:EpisodeControl.GestureRecognizers>
                </u:EpisodeControl>
            </DataTemplate>

            <t:PlatformTemplateSelector x:Key="episodeTemplateSelector" 
                                        DefaultTemplate="{StaticResource EpisodeTemplate}" 
                                        WindowsTemplate="{StaticResource EpisodeTemplateWindows}" 
                                        />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>

        <ToolbarItem 
            Command="{Binding ProgramData.ToggleIsFavoriteCommand}"
            IconImageSource="{Binding ProgramData.IsFavorite, Converter={StaticResource BoolToFavoriteImageConverter}}"
            Order="Primary"
            Priority="0" />

        <ToolbarItem 
            x:Name="ToolbarItemSettings"
            Clicked="ToolbarItemSettings_Clicked"
            IconImageSource="{OnPlatform Default=toolbar_settings_16px.png, Android=toolbar_settings_24px_margin_4px.png}"
            Order="Primary"
            Priority="1" />

        <ToolbarItem 
                Command="{Binding UpdateCommand}"
                Text="{x:Static r:Strings.General_Update}"
                Order="Secondary"
                Priority="0" />

    </ContentPage.ToolbarItems>
    <Shell.SearchHandler>
        <controls:ListSearchHandler 
                BindingContext="{Binding EpisodesViewModel}"
                Placeholder="{x:Static r:Strings.Episodes_SearchEpisodes}"
                SearchBoxVisibility="Collapsible"
                ShowsResults="true">
            <controls:ListSearchHandler.ItemTemplate>
                <DataTemplate>
                    <views:SearchItemView />
                </DataTemplate>
            </controls:ListSearchHandler.ItemTemplate>
        </controls:ListSearchHandler>
    </Shell.SearchHandler>

    <Grid RowDefinitions="Auto,*,Auto,Auto">

        <views:DownloadState Grid.Row="0" Grid.RowSpan="3" />

        <Border Style="{StaticResource Card}" 
                Grid.Row="0" 
                IsVisible="{Binding HasData}"
                Margin="{StaticResource NormalPageMargin}"
                >
            <Grid x:Name="GridLayout" 
                  RowDefinitions="64,36,Auto" 
                  ColumnDefinitions="Auto,*" 
                  HorizontalOptions="FillAndExpand"
                  Style="{StaticResource CardLayout}"
                  >
                <!--<VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="WidthState">
                        <VisualState Name="Narrow">
                            <VisualState.Setters>
                                <Setter Property="Margin" Value="0,8,0,0" TargetName="DescriptionPanel" />
                                <Setter Property="Grid.Column" Value="0" TargetName="DescriptionPanel" />
                                <Setter Property="Grid.Row" Value="1" TargetName="DescriptionPanel" />
                                <Setter Property="Grid.RowSpan" Value="1" TargetName="DescriptionPanel" />
                                <Setter Property="ColumnDefinitions" Value="*" TargetName="GridLayout" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="Wide">
                            <VisualState.Setters>
                                <Setter Property="Margin" Value="8,0,0,0" TargetName="DescriptionPanel" />
                                <Setter Property="Grid.Column" Value="1" TargetName="DescriptionPanel" />
                                <Setter Property="Grid.Row" Value="0" TargetName="DescriptionPanel" />
                                <Setter Property="Grid.RowSpan" Value="2" TargetName="DescriptionPanel" />
                                <Setter Property="ColumnDefinitions" Value="Auto,*" TargetName="GridLayout" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>-->

                <Image WidthRequest="100" 
                       HeightRequest="100"
                       Grid.Row="0"
                       Grid.RowSpan="2"
                       HorizontalOptions="Center"
                       >
                    <Image.Source>
                        <UriImageSource Uri="{Binding ProgramData.ProgramImage.HighResolution, Mode=OneWay}"
                        CacheValidity="1"  
                        CachingEnabled="True"
                    />
                    </Image.Source>
                </Image>

                <ScrollView x:Name="DescriptionPanel"
                            Grid.Column="1"
                            Grid.Row="0"
                            Grid.RowSpan="1"
                            >
                    <VerticalStackLayout>
                        <Label Text="{Binding ProgramData.Description, Mode=OneWay}"
                               Margin="{OnPlatform WinUI='8,0,8,0', Default='8,0,8,0'}"
                            />
                    </VerticalStackLayout>
                </ScrollView>

                <HorizontalStackLayout 
                        Spacing="8"
                        Margin="8,0,0,0"
                        Grid.Column="1"
                        Grid.Row="1"
                    >
                    <Button Style="{StaticResource HyperlinkButton}"
                                    IsVisible="{Binding EpisodesViewModel.CanAutoCreatePlayList}"
                                    Text="{x:Static r:Strings.Episodes_AutoCreatePlayList}"
                                    Command="{Binding EpisodesViewModel.AutoCreatePlayListCommand}"
                                    />

                    <HorizontalStackLayout IsVisible="{OnPlatform Default=true, Android=false}">
                        <!-- This feature doesn't work well on Android. -->
                        <Button Style="{StaticResource HyperlinkButton}"
                                        IsVisible="{Binding EpisodesViewModel.FirstNotListenedEpisodePosition, Converter={StaticResource NullToIsVisibleConverter}}"
                                        Text="{x:Static r:Strings.Episodes_ShowNotPlayedEpisode}"
                                        x:Name="ButtonScrollToFirstNotListened"
                                        Clicked="ButtonScrollToFirstNotListened_Clicked"
                                        />
                    </HorizontalStackLayout>
                </HorizontalStackLayout>

                <!--<HorizontalStackLayout 
                        Spacing="8"
                        BackgroundColor="DarkGreen"
                        Margin="0,0,0,0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Grid.Row="2"
                    >
                    <Button Style="{StaticResource HyperlinkButton}"
                                    Text="{x:Static r:Strings.Episodes_AutoCreatePlayList}"
                                    Command="{Binding EpisodesViewModel.AutoCreatePlayListCommand}"
                                    />

                    <Button Style="{StaticResource HyperlinkButton}"
                                    IsVisible="{Binding EpisodesViewModel.FirstNotListenedEpisodePosition, Converter={StaticResource NullToIsVisibleConverter}}"
                                    Text="{x:Static r:Strings.Episodes_ShowNotPlayedEpisode}"
                                    x:Name="ButtonScrollToFirstNotListened"
                                    Clicked="ButtonScrollToFirstNotListened_Clicked"
                                    />
                </HorizontalStackLayout>-->

            </Grid>
        </Border>

        <views:DownloadState Grid.Row="1" Grid.RowSpan="2" Padding="{StaticResource NormalPageMargin}" BindingContext="{Binding EpisodesViewModel}" />

        <!-- Breaks on Android: ItemSizingStrategy="MeasureFirstItem"-->
        <RefreshView 
                Command="{Binding RefreshCommand}" 
                IsRefreshing="{Binding IsRefreshing}"
                IsVisible="{Binding HasData}"
                Grid.Row="1"
            >
            <CollectionView 
                x:Name="EpisodesListView"
                ItemsSource="{Binding EpisodesViewModel.GroupedItems}"
                IsGrouped="True"
                SelectionMode="{Binding EpisodesViewModel.SelectionModeHelper.InSelectionMode, Converter={StaticResource BoolToSelectionMode}}"
                ItemTemplate="{StaticResource episodeTemplateSelector}" 
                >
                <CollectionView.GroupHeaderTemplate>
                    <DataTemplate>
                        <views:GroupHeaderControl />
                    </DataTemplate>
                </CollectionView.GroupHeaderTemplate>
            </CollectionView>
        </RefreshView>

        <Grid
            Grid.Row="2" 
            Padding="{StaticResource NormalPageMargin}"
            ColumnDefinitions="*, Auto"
            IsVisible="{Binding EpisodesViewModel.HasMoreEpisodes}"
            >
            <Label 
                Text="{x:Static r:Strings.Episodes_TooManyEpisodes}"
                VerticalOptions="Center"
                Grid.Column="0"
                />

            <Button 
                HorizontalOptions="End"
                Grid.Column="1"
                Command="{Binding EpisodesViewModel.DownloadAllEpisodesCommand}" 
                Text="{x:Static r:Strings.Episodes_GetAll}" />
        </Grid>

        <views:PlayerControl Grid.Row="2" />
    </Grid>

</ContentPage>
