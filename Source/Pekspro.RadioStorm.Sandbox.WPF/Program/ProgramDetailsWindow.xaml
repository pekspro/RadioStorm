<Window x:Class="Pekspro.RadioStorm.Sandbox.WPF.Program.ProgramDetailsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:r="clr-namespace:Pekspro.RadioStorm.UI.Resources;assembly=Pekspro.RadioStorm.UI"
        xmlns:episode="clr-namespace:Pekspro.RadioStorm.Sandbox.WPF.Episode" 
        xmlns:UserControls="clr-namespace:Pekspro.RadioStorm.Sandbox.WPF.UserControls" 
        xmlns:program="clr-namespace:Pekspro.RadioStorm.UI.ViewModel.Program;assembly=Pekspro.RadioStorm.UI"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance program:ProgramDetailsViewModel, IsDesignTimeCreatable=True}"
        Title="{Binding Name}" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        <UserControls:DebugControl Grid.Row="0" />
        <StackPanel Grid.Row="1" >
            <TextBlock Text="{Binding Name, Mode=OneWay}" />

            <StackPanel Orientation="Horizontal" Visibility="{Binding HasData, Converter={StaticResource BoolToVisibilityConverter}}">
                <Button Command="{Binding ProgramData.OpenWebPageCommand}" Content="{x:Static r:Strings.GeneralButtonOpenWebPage}" />
                <Button Command="{Binding ProgramData.OpenTwitterCommand}" Content="{x:Static r:Strings.GeneralButtonOpenTwitterPage}" />
                <Button Command="{Binding ProgramData.OpenFacebookCommand}"  Content="{x:Static r:Strings.GeneralButtonOpenFacebookPage}" />
                <Button Click="ButtonSettings_Click" x:Name="ButtonSettings" Content="{x:Static r:Strings.GeneralButtonSettings}" />
                <Button Command="{Binding EpisodesViewModel.SelectionModeHelper.ToggleSelectionModeCommand}">Selection</Button>
                <TextBlock Text="Selected:" Padding="4" />
                <TextBlock Text="{Binding EpisodesViewModel.SelectionModeHelper.SelectionCount}" Padding="4" />
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding ProgramData.ProgramImage.HighResolution, Converter={StaticResource NullImageConverter}}" Width="100" Height="100" />
                <!--<Image Source="{Binding ProgramData.Status.CurrentProgramImage.HighResolution, Converter={StaticResource NullImageConverter}}" Width="100" Height="100" />
            <Image Source="{Binding ProgramData.Status.NextProgramImage.HighResolution, Converter={StaticResource NullImageConverter}}" Width="100" Height="100" />-->
            </StackPanel>

            <CheckBox IsChecked="{Binding ProgramData.IsFavorite}" Content="Is favorite" />
            <CheckBox IsChecked="{Binding ProgramData.SortAscending}" Content="Sort ascending" />
        </StackPanel>

        <UserControls:DownloadStateControl Grid.Row="2" DataContext="{Binding EpisodesViewModel}" />
        
        <ListView 
            x:Name="ListViewEpisodes"
            Grid.Row="2"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ItemsSource="{Binding EpisodesViewModel.Items}"
            Visibility="{Binding EpisodesViewModel.HasData, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
            SelectionMode="{Binding EpisodesViewModel.SelectionModeHelper.InSelectionMode, Converter={StaticResource BoolToSelectionMode}, Mode=OneWay}"
            SelectionChanged="ListViewEpisodes_SelectionChanged"
            Padding="4"
            MouseDoubleClick="ListViewEpisodes_MouseDoubleClick"
                >
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="{x:Static r:Strings.General_AddToPlayList}" Command="{Binding AddToPlayListCommand}" />
                    <MenuItem Header="Add to playlist (multiple)" Click="MenuItemMultipleAddToPlayList_Click" />
                    <MenuItem Header="{Binding IsListened, Converter={StaticResource BoolToToggleIsListenedConverter}}" Command="{Binding ToggleIsListenedCommand}" />
                    <MenuItem Header="Set listened (multiple)" Click="MenuItemMultipleSetListened_Click" />
                    <MenuItem Header="Set not listened (multiple)" Click="MenuItemMultipleSetNotListened_Click" />
                    <MenuItem Header="{x:Static r:Strings.General_Download}" Command="{Binding DownloadCommand}" />
                    <MenuItem Header="{x:Static r:Strings.General_RemoveDownload}" Command="{Binding DeleteDownloadCommand}" />
                    <MenuItem Header="Download (multiple)" Click="MenuItemMultipleDownload_Click" />
                    <MenuItem Header="Delete download (multiple)" Click="MenuItemMultipleDeleteDownload_Click" />

                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <episode:EpisodeControl />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Button 
            Grid.Row="3" 
            Command="{Binding EpisodesViewModel.DownloadAllEpisodesCommand}" 
            Visibility="{Binding EpisodesViewModel.HasMoreEpisodes, Converter={StaticResource BoolToVisibilityConverter}}"
            Content="{x:Static r:Strings.Episodes_GetAll}" />
    </Grid>
</Window>
