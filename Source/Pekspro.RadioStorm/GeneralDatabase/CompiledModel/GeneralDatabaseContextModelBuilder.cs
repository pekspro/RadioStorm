// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Pekspro.RadioStorm.GeneralDatabase.CompiledModel
{
    public partial class GeneralDatabaseContextModel
    {
        partial void Initialize()
        {
            var downloadState = DownloadStateEntityType.Create(this);

            DownloadStateEntityType.CreateAnnotations(downloadState);

            AddAnnotation("ProductVersion", "8.0.0");
            AddRuntimeAnnotation("Relational:RelationalModel", CreateRelationalModel());
        }

        private IRelationalModel CreateRelationalModel()
        {
            var relationalModel = new RelationalModel(this);

            var downloadState = FindEntityType("Pekspro.RadioStorm.GeneralDatabase.Models.DownloadState")!;

            var defaultTableMappings = new List<TableMappingBase<ColumnMappingBase>>();
            downloadState.SetRuntimeAnnotation("Relational:DefaultMappings", defaultTableMappings);
            var peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase = new TableBase("Pekspro.RadioStorm.GeneralDatabase.Models.DownloadState", null, relationalModel);
            var downloadStatusColumnBase = new ColumnBase<ColumnMappingBase>("DownloadStatus", "INTEGER", peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase);
            peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase.Columns.Add("DownloadStatus", downloadStatusColumnBase);
            var episodeIdColumnBase = new ColumnBase<ColumnMappingBase>("EpisodeId", "INTEGER", peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase);
            peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase.Columns.Add("EpisodeId", episodeIdColumnBase);
            var programIdColumnBase = new ColumnBase<ColumnMappingBase>("ProgramId", "INTEGER", peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase);
            peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase.Columns.Add("ProgramId", programIdColumnBase);
            relationalModel.DefaultTables.Add("Pekspro.RadioStorm.GeneralDatabase.Models.DownloadState", peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase);
            var peksproRadioStormGeneralDatabaseModelsDownloadStateMappingBase = new TableMappingBase<ColumnMappingBase>(downloadState, peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase, true);
            peksproRadioStormGeneralDatabaseModelsDownloadStateTableBase.AddTypeMapping(peksproRadioStormGeneralDatabaseModelsDownloadStateMappingBase, false);
            defaultTableMappings.Add(peksproRadioStormGeneralDatabaseModelsDownloadStateMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)episodeIdColumnBase, downloadState.FindProperty("EpisodeId")!, peksproRadioStormGeneralDatabaseModelsDownloadStateMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)downloadStatusColumnBase, downloadState.FindProperty("DownloadStatus")!, peksproRadioStormGeneralDatabaseModelsDownloadStateMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)programIdColumnBase, downloadState.FindProperty("ProgramId")!, peksproRadioStormGeneralDatabaseModelsDownloadStateMappingBase);

            var tableMappings = new List<TableMapping>();
            downloadState.SetRuntimeAnnotation("Relational:TableMappings", tableMappings);
            var downloadStateTable = new Table("DownloadState", null, relationalModel);
            var episodeIdColumn = new Column("EpisodeId", "INTEGER", downloadStateTable);
            downloadStateTable.Columns.Add("EpisodeId", episodeIdColumn);
            var downloadStatusColumn = new Column("DownloadStatus", "INTEGER", downloadStateTable);
            downloadStateTable.Columns.Add("DownloadStatus", downloadStatusColumn);
            var programIdColumn = new Column("ProgramId", "INTEGER", downloadStateTable);
            downloadStateTable.Columns.Add("ProgramId", programIdColumn);
            var pK_DownloadState = new UniqueConstraint("PK_DownloadState", downloadStateTable, new[] { episodeIdColumn });
            downloadStateTable.PrimaryKey = pK_DownloadState;
            var pK_DownloadStateUc = RelationalModel.GetKey(this,
                "Pekspro.RadioStorm.GeneralDatabase.Models.DownloadState",
                new[] { "EpisodeId" });
            pK_DownloadState.MappedKeys.Add(pK_DownloadStateUc);
            RelationalModel.GetOrCreateUniqueConstraints(pK_DownloadStateUc).Add(pK_DownloadState);
            downloadStateTable.UniqueConstraints.Add("PK_DownloadState", pK_DownloadState);
            relationalModel.Tables.Add(("DownloadState", null), downloadStateTable);
            var downloadStateTableMapping = new TableMapping(downloadState, downloadStateTable, true);
            downloadStateTable.AddTypeMapping(downloadStateTableMapping, false);
            tableMappings.Add(downloadStateTableMapping);
            RelationalModel.CreateColumnMapping(episodeIdColumn, downloadState.FindProperty("EpisodeId")!, downloadStateTableMapping);
            RelationalModel.CreateColumnMapping(downloadStatusColumn, downloadState.FindProperty("DownloadStatus")!, downloadStateTableMapping);
            RelationalModel.CreateColumnMapping(programIdColumn, downloadState.FindProperty("ProgramId")!, downloadStateTableMapping);
            return relationalModel.MakeReadOnly();
        }
    }
}
