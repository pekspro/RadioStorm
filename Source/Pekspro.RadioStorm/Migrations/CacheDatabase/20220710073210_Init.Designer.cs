// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pekspro.RadioStorm.CacheDatabase;

#nullable disable

namespace Pekspro.RadioStorm.Migrations.CacheDatabase
{
    [DbContext(typeof(CacheDatabaseContext))]
    [Migration("20220710073210_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ChannelData", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelGroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelImageHighResolution")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelImageLowResolution")
                        .HasColumnType("TEXT");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("LiveAudioUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WebPageUri")
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelId");

                    b.ToTable("ChannelData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ChannelSongListItemData", b =>
                {
                    b.Property<int>("ChannelSongListItemDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Composer")
                        .HasColumnType("TEXT");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<long>("PublishDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelSongListItemDataId");

                    b.HasIndex("ChannelId", "PublishDate");

                    b.ToTable("ChannelSongListItemData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ChannelSongListSyncStatusData", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("ChannelId");

                    b.ToTable("ChannelSongListSyncStatusData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ChannelStatusData", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CurrentEndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentProgram")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentProgramDescription")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CurrentProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentProgramImage")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CurrentStartTime")
                        .HasColumnType("bigint");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<long?>("NextEndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("NextProgram")
                        .HasColumnType("TEXT");

                    b.Property<string>("NextProgramDescription")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NextProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NextProgramImage")
                        .HasColumnType("TEXT");

                    b.Property<long?>("NextStartTime")
                        .HasColumnType("bigint");

                    b.HasKey("ChannelId");

                    b.ToTable("ChannelStatusData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.DataBaseSchema", b =>
                {
                    b.Property<int>("DataBaseSchemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("DataBaseSchemaId");

                    b.ToTable("DataBaseSchema", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.EpisodeData", b =>
                {
                    b.Property<int>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AudioDownloadDuration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AudioDownloadUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("AudioStreamWithMusicDuration")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AudioStreamWithMusicExpireDate")
                        .HasColumnType("bigint");

                    b.Property<string>("AudioStreamWithMusicUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("AudioStreamWithoutMusicDuration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AudioStreamWithoutMusicUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EpisodeImage")
                        .HasColumnType("TEXT");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProgramName")
                        .HasColumnType("TEXT");

                    b.Property<long>("PublishDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EpisodeId");

                    b.HasIndex("ProgramId", "PublishDate");

                    b.ToTable("EpisodeData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.EpisodeListSyncStatusData", b =>
                {
                    b.Property<int>("ProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IncrementallyUpdateCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LatestFullSynchronizingTime")
                        .HasColumnType("bigint");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProgramId");

                    b.ToTable("EpisodeListSyncStatusData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.EpisodeSongListItemData", b =>
                {
                    b.Property<int>("EpisodeSongListItemDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<string>("Composer")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<long>("PublishDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EpisodeSongListItemDataId");

                    b.HasIndex("EpisodeId", "PublishDate");

                    b.ToTable("EpisodeSongListItemData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.EpisodeSongListSyncStatusData", b =>
                {
                    b.Property<int>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("EpisodeId");

                    b.ToTable("EpisodeSongListSyncStatusData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ListSyncStatusData", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("TypeId");

                    b.ToTable("ListSyncStatusData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ProgramData", b =>
                {
                    b.Property<int>("ProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BroadcastInfo")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FacebookPageUri")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasOnDemand")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasPod")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgramImageHighResolution")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgramImageLowResolution")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgramUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitterPageUri")
                        .HasColumnType("TEXT");

                    b.HasKey("ProgramId");

                    b.ToTable("ProgramData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ScheduledEpisodeListItemData", b =>
                {
                    b.Property<int>("ScheduledEpisodeDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("EndTimeUtc")
                        .HasColumnType("bigint");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProgramName")
                        .HasColumnType("TEXT");

                    b.Property<long>("StartTimeUtc")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ScheduledEpisodeDataId");

                    b.HasIndex("ChannelId", "Date");

                    b.ToTable("ScheduledEpisodeListItemData", (string)null);
                });

            modelBuilder.Entity("Pekspro.RadioStorm.Cache.Models.ScheduledEpisodeListSyncStatusData", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<long>("LatestUpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("ChannelId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("Date");

                    b.ToTable("ScheduledEpisodeListSyncStatusData", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
